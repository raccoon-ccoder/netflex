{"version":3,"file":"static/js/947.c91fe3cd.chunk.js","mappings":"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","sources":["api/api.ts","atom/atoms.tsx","components/Modal/style.ts","components/Modal/index.tsx","util/utils.ts","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs"],"sourcesContent":["const API_KEY = \"f2e4123fa21aa590fe3fd4bc4477dd8c\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\nexport interface IMovie {\n  backdrop_path: string;\n  genre_ids: number[];\n  id: number;\n  original_language: string;\n  original_title?: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date?: string;\n  first_air_date?: string;\n  title?: string;\n  name?: string;\n  video?: boolean;\n  vote_average: number;\n  vote_count: number;\n  media_type?: string;\n}\n\nexport interface IGetMoviesResult {\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport async function getMovies() {\n  return (\n    await fetch(\n      `${BASE_PATH}/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1&region=kr`\n    )\n  ).json();\n}\n\nexport async function getTopRatedMovies() {\n  return (\n    await fetch(\n      `${BASE_PATH}/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1&region=kr`\n    )\n  ).json();\n}\n\nexport async function getUpcomingMovies() {\n  return (\n    await fetch(\n      `${BASE_PATH}/movie/upcoming?api_key=${API_KEY}&language=en-US&page=1&region=kr`\n    )\n  ).json();\n}\n\nexport async function getPopularMovies() {\n  return (\n    await fetch(\n      `${BASE_PATH}/movie/popular?api_key=${API_KEY}&language=en-US&page=1&region=kr`\n    )\n  ).json();\n}\n\ninterface genre {\n  id: number;\n  name: string;\n}\n\nexport interface IGetMovie {\n  genres: genre[];\n  popularity: number;\n  release_date?: string;\n  first_air_date?: string;\n}\n\nexport async function getMovie(movieId: number | undefined) {\n  return (\n    await fetch(\n      `${BASE_PATH}/movie/${movieId}?api_key=${API_KEY}&language=en-US&region=kr`\n    )\n  ).json();\n}\n\nexport interface IGetMovieTrailer {\n  key: string;\n}\n\nexport async function getMovieTrailer(movieId: number) {\n  return (\n    await fetch(\n      `${BASE_PATH}/movie/${movieId}/video?api_key=${API_KEY}&language=en-US&region=kr`\n    )\n  ).json();\n}\n\nexport async function getPopularTvShows() {\n  return (\n    await fetch(\n      `${BASE_PATH}/tv/popular?api_key=${API_KEY}&language=en-US&page=1&region=kr`\n    )\n  ).json();\n}\n\nexport async function getTopRatedTvShows() {\n  return (\n    await fetch(\n      `${BASE_PATH}/tv/top_rated?api_key=${API_KEY}&language=en-US&page=1&region=kr`\n    )\n  ).json();\n}\n\nexport async function getOnTheAirTvShows() {\n  return (\n    await fetch(\n      `${BASE_PATH}/tv/on_the_air?api_key=${API_KEY}&language=en-US&page=1&region=kr`\n    )\n  ).json();\n}\n\nexport async function getAiringTodayTvShows() {\n  return (\n    await fetch(\n      `${BASE_PATH}/tv/airing_today?api_key=${API_KEY}&language=en-US&page=1&region=kr`\n    )\n  ).json();\n}\n\nexport async function getTv(tvId: number | undefined) {\n  return (\n    await fetch(\n      `${BASE_PATH}/tv/${tvId}?api_key=${API_KEY}&language=en-US&region=kr`\n    )\n  ).json();\n}\n\nexport async function getResultByKeyword(keyword: string | null) {\n  return (\n    await fetch(\n      `${BASE_PATH}/search/multi?api_key=${API_KEY}&query=${keyword}&language=en-US&region=kr`\n    )\n  ).json();\n}\n","import { atom } from \"recoil\";\n\nexport const contentAtom = atom({\n  key: \"contentAtom\",\n  default: [0, \"\", \"\"],\n});\n","import styled from \"styled-components\";\n\nexport const BigDetails = styled.div``;\n\nexport const BigGenres = styled.div`\n  margin-bottom: 20px;\n  span {\n    color: gray;\n  }\n`;\n\nexport const BigDate = styled.div`\n  span {\n    color: gray;\n  }\n`;\n","import { useQuery } from \"react-query\";\nimport { useRecoilValue } from \"recoil\";\nimport { contentAtom } from \"../../atom/atoms\";\nimport { getMovie, getTv, IGetMovie } from \"../../api/api\";\nimport * as S from \"./style\";\n\nfunction Modal() {\n  const [contentId, contentName, keyword] = useRecoilValue(contentAtom);\n  const { isLoading, data } = useQuery<IGetMovie>([\"movie\", \"test\"], () =>\n    contentName === \"movie\"\n      ? getMovie(Number(contentId))\n      : getTv(Number(contentId))\n  );\n\n  return isLoading ? null : (\n    <S.BigDetails>\n      <S.BigGenres>\n        <span>genre:</span>\n        {data?.genres.map((i) => i.name).join(\", \")}\n      </S.BigGenres>\n      <S.BigGenres>\n        <span>popularity:</span>\n        {data?.popularity.toFixed(1)}\n      </S.BigGenres>\n      <S.BigDate>\n        <span>relase date:</span>\n        {data?.release_date || data?.first_air_date}\n      </S.BigDate>\n    </S.BigDetails>\n  );\n}\n\nexport default Modal;\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}${id}`;\n}\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    var isMounted = useRef(false);\n    useIsomorphicLayoutEffect(function () {\n        isMounted.current = true;\n        return function () {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { __values } from 'tslib';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useId } from '../../utils/use-id.mjs';\n\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useId();\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            var e_1, _a;\n            presenceChildren.set(childId, true);\n            try {\n                for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var isComplete = _c.value;\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __read, __spreadArray } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport process from '../../utils/process.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\n\nvar getChildKey = function (child) { return child.key || \"\"; };\nvar isDev = process.env.NODE_ENV !== \"production\";\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = isDev ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (isDev && seenChildren && seenChildren.has(key)) {\n            console.warn(\"Children of AnimatePresence require unique keys. \\\"\".concat(key, \"\\\" is a duplicate.\"));\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = __read(useForceUpdate(), 1), forceRender = _d[0];\n    var forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    var isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    var childrenToRender = filteredChildren;\n    var exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    var isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(function () {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(function () {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = __spreadArray([], __read(childrenToRender), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    var isMounted = useIsMounted();\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    var forceRender = useCallback(function () {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    var deferredForceRender = useCallback(function () { return sync.postRender(forceRender); }, [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n"],"names":["API_KEY","BASE_PATH","getMovies","fetch","json","getTopRatedMovies","getUpcomingMovies","getPopularMovies","getMovie","movieId","getPopularTvShows","getTopRatedTvShows","getOnTheAirTvShows","getAiringTodayTvShows","getTv","tvId","getResultByKeyword","keyword","contentAtom","atom","key","default","BigDetails","styled","BigGenres","BigDate","useRecoilValue","contentId","contentName","useQuery","Number","isLoading","data","genres","map","i","name","join","popularity","toFixed","release_date","first_air_date","makeImagePath","id","format","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PresenceChild","_a","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","useId","context","useMemo","childId","e_1","set","_b","__values","values","_c","next","done","value","e_1_1","error","return","call","register","delete","undefined","forEach","_","React","size","PresenceContext","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","_d","__read","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","useUnmountEffect","clear","__spreadArray","presentKeys","targetKeys","numPresent","length","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement"],"sourceRoot":""}