{"version":3,"file":"static/js/917.49f248d9.chunk.js","mappings":"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","sources":["components/Slider/style.ts","components/Slider/index.tsx","pages/Home/style.ts","pages/Home/Home.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const Sliders = styled.div`\n  margin: 0.5vw 0 0 0;\n  position: relative;\n  box-sizing: border-box;\n  padding: 0 4%;\n  box-sizing: border-box;\n`;\n\nexport const SliderTitle = styled.h2`\n  line-height: 1.3;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 0 0 0;\n  box-sizing: border-box;\n  a {\n    font-size: 1.6vw;\n    color: #e5e5e5;\n    font-weight: 700;\n    margin: 0.5em 0;\n    text-decoration: none;\n    display: inline-block;\n    min-width: 6em;\n    div {\n      /* display: table-cell; */\n      vertical-align: bottom;\n      line-height: 2vw;\n      font-size: 1.6vw;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n`;\n\nexport const ArrowBox = styled.div``;\n\nexport const Arrow = styled.svg`\n  width: 2vw;\n  height: 2vw;\n  border: 2px solid white;\n  border-radius: 50%;\n  cursor: pointer;\n  path {\n    fill: white;\n  }\n`;\n\nexport const Slider = styled.div`\n  position: relative;\n  @media screen and (min-width: 500px) and (max-width: 799px) {\n    height: 17vw;\n  }\n  @media screen and (min-width: 800px) and (max-width: 1099px) {\n    height: 12vw;\n  }\n  @media screen and (min-width: 1100px) {\n    height: 9vw;\n  }\n`;\n\nexport const Row = styled(motion.div)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  position: absolute;\n`;\n\nexport const rowVariants = {\n  hidden: (back: boolean) => {\n    return { x: back ? -window.innerWidth : window.innerWidth };\n  },\n  visible: {\n    x: 0,\n  },\n  exit: (back: boolean) => {\n    return {\n      x: back ? window.innerWidth : -window.innerWidth,\n    };\n  },\n};\n\nexport const RowItem = styled(motion.div)`\n  padding: 0 0.2vw;\n  box-sizing: border-box;\n  cursor: pointer;\n  border-radius: 0.5vw;\n  overflow: hidden;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n  @media screen and (min-width: 500px) and (max-width: 799px) {\n    width: 33.3%;\n  }\n  @media screen and (min-width: 800px) and (max-width: 1099px) {\n    width: 25%;\n  }\n  @media screen and (min-width: 1100px) and (max-width: 1399px) {\n    width: 20%;\n  }\n  @media screen and (min-width: 1400px) {\n    width: 16.66666667%;\n  }\n`;\n\nexport const Box = styled(motion.div)<{ bgphoto: string }>`\n  background-image: url(${(props) => props.bgphoto});\n  background-size: cover;\n  background-position: center center;\n`;\n\nexport const BoxInner = styled.div`\n  width: 100%;\n  padding: 28.125% 0;\n  box-sizing: border-box;\n  position: relative;\n`;\n\nexport const boxVariants = {\n  normal: { scale: 1 },\n  hover: {\n    scaleX: 1.2,\n    scaleY: 1.8,\n    y: -20,\n    zIndex: 2,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nexport const Img = styled(motion.div)<{ bgphoto: string }>`\n  background-image: url(${(props) => props.bgphoto});\n  background-size: 100% 100%;\n  background-position: center center;\n  position: absolute;\n  top: 0;\n  opacity: 0;\n  width: 100%;\n  height: 70%;\n`;\n\nexport const Info = styled(motion.div)`\n  width: 100%;\n  height: 30%;\n  padding: 5px;\n  box-sizing: border-box;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const infoVariants = {\n  hover: {\n    opacity: 1,\n    zIndex: 4,\n    fontSize: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nexport const Title = styled.span`\n  font-size: 0.5rem;\n  transform: scaleX(1.2) scaleY(0.8);\n  width: 80%;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nexport const BigContent = styled(motion.div)`\n  position: absolute;\n  max-width: 850px;\n  width: calc(100% * 10 / 11);\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  z-index: 10;\n  @media screen and (min-width: 500px) and (max-width: 799px) {\n    top: -200px;\n  }\n  @media screen and (min-width: 800px) and (max-width: 1099px) {\n    top: -310px;\n  }\n  @media screen and (min-width: 1100px) and (max-width: 1399px) {\n    top: -450px;\n  }\n  @media screen and (min-width: 1400px) {\n    top: -500px;\n  }\n`;\n\nexport const BigCover = styled.div`\n  width: 100%;\n  height: 50vw; // 나중에 수정 (width를 기준으로 설정해야 할듯)\n  max-height: 550px;\n  background-size: 100% 100%;\n  background-position: center center;\n`;\n\nexport const BigInfo = styled.div`\n  width: 100%;\n  padding: 20px;\n  background: ${(props) => props.theme.black.darker};\n`;\n\nexport const BigTitle = styled.h2`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 30px;\n  padding: 10px;\n`;\n\nexport const BigDesc = styled.div`\n  display: grid;\n  grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);\n  column-gap: 2em;\n  text-overflow: clip;\n  padding: 10px;\n`;\n\nexport const BigOverview = styled.p`\n  display: block;\n  color: ${(props) => props.theme.white.lighter};\n  text-overflow: clip;\n  overflow: hidden;\n`;\n","import { useEffect, useState } from \"react\";\nimport { AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getMovie, IGetMovie, IGetMoviesResult } from \"../../api/api\";\nimport { Link, PathMatch, useMatch, useNavigate } from \"react-router-dom\";\nimport { makeImagePath } from \"../../util/utils\";\nimport * as S from \"./style\";\nimport { useQuery } from \"react-query\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { contentAtom } from \"../../atom/atoms\";\nimport Modal from \"../Modal\";\n\ninterface IMoviesProps {\n  data: IGetMoviesResult;\n  title: string;\n  content: string;\n  keyword: string;\n}\n\nfunction Slider({ data, title, content, keyword }: IMoviesProps) {\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const [back, setBack] = useState(false);\n\n  // 클릭하면 이전 row가 사라지기 전에 다음 row가 사라지려고 하기에 gap이 커짐\n  // 따라서 버튼 클릭시 한 슬라이더가 사라지고 다 사라졌는지 여부를 leaving\n  // 다 사라졌을 경우 AnimatePresence onExitComplete={toggleLeaving}으로 설정\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n\n  const increaseIndex = () => {\n    if (leaving) return;\n    setLeaving(true);\n    setBack(false);\n    const totalContents = data?.results.length;\n    const maxIndex = Math.floor(totalContents / offset);\n    setIndex((prev) => (prev === maxIndex - 1 ? 0 : prev + 1));\n  };\n\n  const decreaseIndex = () => {\n    if (leaving) return;\n    setLeaving(true);\n    setBack(true);\n    const totalContents = data?.results.length;\n    const maxIndex = Math.floor(totalContents / offset);\n    setIndex((prev) => (prev === 0 ? maxIndex : prev - 1));\n  };\n\n  // 영화 클릭시 팝업창 생성\n  // useHistory() :  URL을 왔다갔다 할 수 있음 (여러 router 이동 가능)\n  const navigate = useNavigate();\n  const homeMovieMathch: PathMatch<string> | null =\n    useMatch(\"/movies/:movieId\");\n\n  const homeTvMatch: PathMatch<string> | null = useMatch(\"/tv/:contentId\");\n\n  const [getContent, setBigMovie] = useRecoilState(contentAtom);\n\n  const onClicked = (contentId: number) => {\n    content === \"movie\"\n      ? navigate(`/movies/${contentId}`)\n      : navigate(`/tv/${contentId}`);\n    setBigMovie([contentId, content, keyword]);\n  };\n\n  // 특정 영화 클릭한 상태에서 영화가 아닌 바깥 부분 클릭할 경우 팝업창 닫히게 함\n  const onOverlayClick = () =>\n    content === \"movie\" ? navigate(\"/\") : navigate(\"/tv\");\n\n  // 사용자가 어떤 위치의 스크롤에 있어도 팝업창은 항상 화면 가운데에 나타나야 함\n  const { scrollY } = useViewportScroll();\n\n  const clikedContent = data?.results.find((movie: any) =>\n    keyword === getContent[2] && content === \"movie\"\n      ? movie.id + \"\" === homeMovieMathch?.params.movieId\n      : movie.id + \"\" === homeTvMatch?.params.contentId\n  );\n\n  const [offset, setOffset] = useState(5);\n  const changeOffset = () => {\n    if (500 <= window.innerWidth && window.innerWidth <= 799) {\n      setOffset(3);\n    } else if (800 <= window.innerWidth && window.innerWidth <= 1099) {\n      setOffset(4);\n    } else if (1100 <= window.innerWidth && window.innerWidth <= 1399) {\n      setOffset(5);\n    } else if (1400 <= window.innerWidth) {\n      setOffset(6);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", changeOffset);\n    return () => {\n      window.removeEventListener(\"resize\", changeOffset);\n    };\n  }, []);\n\n  return (\n    <>\n      <S.Sliders>\n        <S.SliderTitle>\n          <Link to=\"/\">\n            <div>{title}</div>\n          </Link>\n          <S.ArrowBox>\n            <S.Arrow\n              onClick={decreaseIndex}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 320 512\"\n            >\n              <path d=\"M224 480c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25l192-192c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l169.4 169.4c12.5 12.5 12.5 32.75 0 45.25C240.4 476.9 232.2 480 224 480z\" />\n            </S.Arrow>\n            <S.Arrow\n              onClick={increaseIndex}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 320 512\"\n            >\n              <path d=\"M96 480c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L242.8 256L73.38 86.63c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l192 192c12.5 12.5 12.5 32.75 0 45.25l-192 192C112.4 476.9 104.2 480 96 480z\" />{\" \"}\n            </S.Arrow>\n          </S.ArrowBox>\n        </S.SliderTitle>\n        <S.Slider>\n          <AnimatePresence\n            initial={false}\n            onExitComplete={toggleLeaving}\n            custom={back}\n          >\n            <S.Row\n              custom={back}\n              key={index}\n              variants={S.rowVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit=\"exit\"\n              transition={{ type: \"tween\", duration: 1 }}\n            >\n              {data.results\n                .slice(offset * index, offset * index + offset)\n                .map((item) => (\n                  <S.RowItem\n                    layoutId={keyword + item.id}\n                    key={item.id}\n                    variants={S.boxVariants}\n                    initial=\"normal\"\n                    whileHover=\"hover\"\n                    transition={{ type: \"tween\", duration: 0.4 }}\n                    onClick={() => onClicked(item.id)}\n                  >\n                    <S.Box\n                      bgphoto={makeImagePath(\n                        item.backdrop_path || item.poster_path\n                      )}\n                    >\n                      <S.BoxInner>\n                        <S.Img\n                          variants={S.infoVariants}\n                          bgphoto={makeImagePath(\n                            item.backdrop_path || item.poster_path\n                          )}\n                        />\n                        <S.Info variants={S.infoVariants}>\n                          <S.Title>{item.title || item.name}</S.Title>\n                        </S.Info>\n                      </S.BoxInner>\n                    </S.Box>\n                  </S.RowItem>\n                ))}\n            </S.Row>\n          </AnimatePresence>\n        </S.Slider>\n      </S.Sliders>\n      <AnimatePresence>\n        {clikedContent && (\n          <>\n            <S.Overlay\n              onClick={onOverlayClick}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            ></S.Overlay>\n            <S.BigContent\n              layoutId={getContent[2] + \"\" + getContent[0]}\n              style={{\n                top: scrollY.get() - 200,\n              }}\n            >\n              {clikedContent && (\n                <>\n                  <S.BigCover\n                    style={{\n                      backgroundImage: `linear-gradient(to top, #181818, transparent), url(${makeImagePath(\n                        clikedContent.backdrop_path || clikedContent.poster_path\n                      )})`,\n                    }}\n                  />\n                  <S.BigInfo>\n                    <S.BigTitle>\n                      {clikedContent.title || clikedContent.name}\n                    </S.BigTitle>\n                    <S.BigDesc>\n                      <S.BigOverview>{clikedContent.overview}</S.BigOverview>\n                      <Modal />\n                    </S.BigDesc>\n                  </S.BigInfo>\n                </>\n              )}\n            </S.BigContent>\n          </>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}\nexport default Slider;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: black;\n  height: 100%;\n`;\n\nexport const Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Banner = styled.div<{ bgPhoto: string }>`\n  height: 56.25vw;\n  width: 100%;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 5vw;\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.p`\n  font-size: 1.8vw;\n  width: 50%;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 4;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const Main = styled.main`\n  width: 100%;\n  position: relative;\n  top: -17vw;\n`;\n","import { useQuery } from \"react-query\";\nimport {\n  getMovies,\n  getPopularMovies,\n  getTopRatedMovies,\n  getUpcomingMovies,\n} from \"../../api/api\";\nimport { makeImagePath } from \"../../util/utils\";\nimport Slider from \"../../components/Slider\";\nimport * as S from \"./style\";\n\nfunction Home() {\n  const nowMoviesQuery = useQuery([\"movies\", \"nowPlaying\"], getMovies, {\n    staleTime: 5 * 1000,\n  });\n  const topMoviesQuery = useQuery([\"movies\", \"topRated\"], getTopRatedMovies);\n  const comingMoviesQuery = useQuery([\"movies\", \"upComing\"], getUpcomingMovies);\n  const popularMoviesQuery = useQuery([\"movies\", \"popular\"], getPopularMovies);\n  return (\n    <S.Wrapper>\n      {nowMoviesQuery.isLoading ? (\n        <S.Loader>Loading</S.Loader>\n      ) : (\n        <S.Banner\n          bgPhoto={makeImagePath(\n            nowMoviesQuery.data?.results[0].backdrop_path || \"\"\n          )}\n        >\n          <S.Title>{nowMoviesQuery.data?.results[0].title}</S.Title>\n          <S.Overview>{nowMoviesQuery.data?.results[0].overview}</S.Overview>\n        </S.Banner>\n      )}\n\n      <S.Main>\n        {nowMoviesQuery.isLoading ||\n        topMoviesQuery.isLoading ||\n        comingMoviesQuery.isLoading ||\n        popularMoviesQuery.isLoading ? (\n          <S.Loader>Loading</S.Loader>\n        ) : (\n          <>\n            <Slider\n              data={nowMoviesQuery.data}\n              title=\"최신 콘텐츠\"\n              content=\"movie\"\n              keyword=\"new\"\n            />\n            <Slider\n              data={topMoviesQuery.data}\n              title=\"역대 명작 콘텐츠\"\n              content=\"movie\"\n              keyword=\"top\"\n            />\n            <Slider\n              data={comingMoviesQuery.data}\n              title=\"예정 콘텐츠\"\n              content=\"movie\"\n              keyword=\"coming\"\n            />\n            <Slider\n              data={popularMoviesQuery.data}\n              title=\"지금 뜨는 콘텐츠\"\n              content=\"movie\"\n              keyword=\"popular\"\n            />\n          </>\n        )}\n      </S.Main>\n    </S.Wrapper>\n  );\n}\n\nexport default Home;\n"],"names":["Sliders","styled","SliderTitle","ArrowBox","Arrow","Slider","Row","motion","rowVariants","hidden","back","x","window","innerWidth","visible","exit","RowItem","Box","props","bgphoto","BoxInner","boxVariants","normal","scale","hover","scaleX","scaleY","y","zIndex","transition","delay","duration","type","Img","Info","theme","black","lighter","infoVariants","opacity","fontSize","Title","Overlay","BigContent","BigCover","BigInfo","darker","BigTitle","white","BigDesc","BigOverview","data","title","content","keyword","useState","index","setIndex","leaving","setLeaving","setBack","navigate","useNavigate","homeMovieMathch","useMatch","homeTvMatch","useRecoilState","contentAtom","getContent","setBigMovie","scrollY","useViewportScroll","clikedContent","results","find","movie","id","params","movieId","contentId","offset","setOffset","changeOffset","useEffect","addEventListener","removeEventListener","to","onClick","totalContents","length","maxIndex","Math","floor","prev","xmlns","viewBox","d","AnimatePresence","initial","onExitComplete","custom","variants","S","animate","slice","map","item","layoutId","whileHover","makeImagePath","backdrop_path","poster_path","name","style","top","get","backgroundImage","overview","Modal","Wrapper","Loader","Banner","bgPhoto","Overview","Main","nowMoviesQuery","useQuery","getMovies","staleTime","topMoviesQuery","getTopRatedMovies","comingMoviesQuery","getUpcomingMovies","popularMoviesQuery","getPopularMovies","isLoading"],"sourceRoot":""}