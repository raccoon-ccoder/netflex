{"version":3,"file":"static/js/59.bc7e4507.chunk.js","mappings":"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","sources":["pages/Search/style.ts","pages/Search/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const Wrapper = styled.div`\n  background: ${(props) => props.theme.black.darker};\n  height: 100%;\n  position: relative;\n  top: 70px;\n`;\n\nexport const Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Main = styled.main`\n  width: 100%;\n  /* position: relative;\n  top: -17vw; */\n`;\n\n// search motion\n\nexport const Sliders = styled.div`\n  margin: 3vw 0;\n  position: relative;\n  box-sizing: border-box;\n  padding: 0 4%;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const SliderTitle = styled.h2`\n  line-height: 1.3;\n  margin-bottom: 20px;\n`;\n\nexport const Slider = styled.div`\n  position: relative;\n  @media screen and (min-width: 500px) and (max-width: 799px) {\n    height: 14vw;\n  }\n  @media screen and (min-width: 800px) and (max-width: 1099px) {\n    height: 12vw;\n  }\n  @media screen and (min-width: 1100px) {\n    height: 11vw;\n  }\n`;\n\nexport const Row = styled(motion.div)`\n  height: 100%;\n  width: 100%;\n`;\n\nexport const RowItem = styled(motion.div)`\n  padding: 0.2vw;\n  box-sizing: border-box;\n  cursor: pointer;\n  border-radius: 0.8vw;\n  overflow: hidden;\n  float: left;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n  @media screen and (min-width: 500px) and (max-width: 799px) {\n    width: 33.3%;\n  }\n  @media screen and (min-width: 800px) and (max-width: 1099px) {\n    width: 25%;\n  }\n  @media screen and (min-width: 1100px) and (max-width: 1399px) {\n    width: 20%;\n  }\n  @media screen and (min-width: 1400px) {\n    width: 16.66666667%;\n  }\n`;\n\nexport const Box = styled(motion.div)<{ bgphoto: string }>`\n  background-image: url(${(props) => props.bgphoto});\n  background-size: cover;\n  background-position: center center;\n`;\n\nexport const BoxInner = styled.div`\n  width: 100%;\n  padding: 28.125% 0;\n  box-sizing: border-box;\n  position: relative;\n`;\n\nexport const boxVariants = {\n  normal: { scale: 1 },\n  hover: {\n    scaleX: 1.2,\n    scaleY: 1.8,\n    y: -20,\n    zIndex: 2,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nexport const Img = styled(motion.div)<{ bgphoto: string }>`\n  background-image: url(${(props) => props.bgphoto});\n  background-size: 100% 100%;\n  background-position: center center;\n  position: absolute;\n  top: 0;\n  opacity: 0;\n  width: 100%;\n  height: 70%;\n`;\n\nexport const Info = styled(motion.div)`\n  width: 100%;\n  height: 30%;\n  padding: 5px;\n  box-sizing: border-box;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const infoVariants = {\n  hover: {\n    opacity: 1,\n    zIndex: 4,\n    fontSize: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nexport const Title = styled.span`\n  font-size: 0.5rem;\n  transform: scaleX(1.2) scaleY(0.8);\n  width: 80%;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nexport const BigMovie = styled(motion.div)`\n  position: absolute;\n  max-width: 850px;\n  width: calc(100% * 10 / 11);\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  z-index: 5;\n  @media screen and (min-width: 500px) and (max-width: 799px) {\n    top: 1vw;\n  }\n  @media screen and (min-width: 800px) and (max-width: 1099px) {\n    top: 1vw;\n  }\n  @media screen and (min-width: 1100px) and (max-width: 1399px) {\n    top: 1vw;\n  }\n  @media screen and (min-width: 1400px) {\n    top: 1vw;\n  }\n`;\n\nexport const BigCover = styled.div`\n  width: 100%;\n  height: 50vw; // 나중에 수정 (width를 기준으로 설정해야 할듯)\n  max-height: 550px;\n  background-size: 100% 100%;\n  background-position: center center;\n`;\n\nexport const BigInfo = styled.div`\n  width: 100%;\n  padding: 20px;\n  background: ${(props) => props.theme.black.darker};\n`;\n\nexport const BigTitle = styled.h2`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 30px;\n  padding: 10px;\n`;\n\nexport const BigDesc = styled.div`\n  display: grid;\n  grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);\n  column-gap: 2em;\n  text-overflow: clip;\n  padding: 10px;\n`;\n\nexport const BigOverview = styled.p`\n  display: block;\n  color: ${(props) => props.theme.white.lighter};\n  text-overflow: clip;\n  overflow: hidden;\n`;\n\nexport const BigOverviewText = styled.div``;\n","import { AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { getResultByKeyword, IGetMoviesResult } from \"../../api/api\";\nimport { contentAtom } from \"../../atom/atoms\";\nimport Modal from \"../../components/Modal\";\nimport { makeImagePath } from \"../../util/utils\";\nimport * as S from \"./style\";\n\nfunction Search() {\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\n\n  const { isLoading, data } = useQuery<IGetMoviesResult>(\n    [\"search\", keyword],\n    () => getResultByKeyword(keyword)\n  );\n\n  const [bigMovie, setBigMovie] = useRecoilState(contentAtom);\n\n  const onClicked = (contentId: number, contentType: string) => {\n    setBigMovie([contentId, contentType]);\n  };\n\n  const clikedMovie = data?.results.find(\n    (content: any) => content.id === Number(bigMovie[0])\n  );\n  console.log(data);\n  const onOverlayClick = () => setBigMovie([0, \"\"]);\n\n  const [offset, setOffset] = useState(5);\n  const changeOffset = () => {\n    if (500 <= window.innerWidth && window.innerWidth <= 799) {\n      setOffset(3);\n    } else if (800 <= window.innerWidth && window.innerWidth <= 1099) {\n      setOffset(4);\n    } else if (1100 <= window.innerWidth && window.innerWidth <= 1399) {\n      setOffset(5);\n    } else if (1400 <= window.innerWidth) {\n      setOffset(6);\n    }\n  };\n  const { scrollY } = useViewportScroll();\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", changeOffset);\n    return () => {\n      window.removeEventListener(\"resize\", changeOffset);\n    };\n  }, []);\n\n  return (\n    <S.Wrapper>\n      {isLoading ? (\n        <S.Loader>Loading</S.Loader>\n      ) : (\n        <S.Main>\n          <S.Sliders>\n            <S.SliderTitle>{keyword}로 검색한 결과입니다.</S.SliderTitle>\n            <S.Row>\n              {data?.results.map(\n                (content) =>\n                  content.media_type !== \"person\" &&\n                  content.backdrop_path !== null && (\n                    <S.RowItem\n                      layoutId={content.id + \"\"}\n                      key={content.id}\n                      variants={S.boxVariants}\n                      initial=\"normal\"\n                      whileHover=\"hover\"\n                      transition={{ type: \"tween\" }}\n                      onClick={() =>\n                        onClicked(content.id, content?.media_type + \"\")\n                      }\n                    >\n                      <S.Box bgphoto={makeImagePath(content.backdrop_path)}>\n                        <S.BoxInner>\n                          <S.Img\n                            variants={S.infoVariants}\n                            bgphoto={makeImagePath(content.backdrop_path)}\n                          />\n                          <S.Info variants={S.infoVariants}>\n                            <S.Title>{content.title || content.name}</S.Title>\n                          </S.Info>\n                        </S.BoxInner>\n                      </S.Box>\n                    </S.RowItem>\n                  )\n              )}\n            </S.Row>\n          </S.Sliders>\n        </S.Main>\n      )}\n      <AnimatePresence>\n        {clikedMovie && (\n          <>\n            <S.Overlay\n              onClick={onOverlayClick}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            ></S.Overlay>\n            <S.BigMovie\n              layoutId={clikedMovie.id + \"\"}\n              // style={{\n              //   top: scrollY.get() - 400,\n              // }}\n            >\n              {clikedMovie && (\n                <>\n                  <S.BigCover\n                    style={{\n                      backgroundImage: `linear-gradient(to top, #181818, transparent), url(${makeImagePath(\n                        clikedMovie.backdrop_path\n                      )})`,\n                    }}\n                  />\n                  <S.BigInfo>\n                    <S.BigTitle>\n                      {clikedMovie.title || clikedMovie.name}\n                    </S.BigTitle>\n                    <S.BigDesc>\n                      <S.BigOverview>\n                        <S.BigOverviewText>\n                          {clikedMovie.overview}\n                        </S.BigOverviewText>\n                      </S.BigOverview>\n\n                      <Modal />\n                    </S.BigDesc>\n                  </S.BigInfo>\n                </>\n              )}\n            </S.BigMovie>\n          </>\n        )}\n      </AnimatePresence>\n    </S.Wrapper>\n  );\n}\n\nexport default Search;\n"],"names":["Wrapper","styled","props","theme","black","darker","Loader","Main","Sliders","SliderTitle","Row","motion","RowItem","Box","bgphoto","BoxInner","boxVariants","normal","scale","hover","scaleX","scaleY","y","zIndex","transition","delay","duration","type","Img","Info","lighter","infoVariants","opacity","fontSize","Title","Overlay","BigMovie","BigCover","BigInfo","BigTitle","white","BigDesc","BigOverview","BigOverviewText","location","useLocation","keyword","URLSearchParams","search","get","useQuery","getResultByKeyword","isLoading","data","useRecoilState","contentAtom","bigMovie","setBigMovie","clikedMovie","results","find","content","id","Number","console","log","useState","setOffset","changeOffset","window","innerWidth","useViewportScroll","scrollY","useEffect","addEventListener","removeEventListener","map","media_type","backdrop_path","layoutId","variants","S","initial","whileHover","onClick","contentId","contentType","makeImagePath","title","name","AnimatePresence","animate","exit","style","backgroundImage","overview","Modal"],"sourceRoot":""}